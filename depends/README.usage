The follow instructions are very helpful, getting your Ixcoin toolchain build with
the latest tools is the first step.  If you already have some of these, you can point
to the downloads on your system with SOURCES_PATH, or try to place them in the default
directory, under this one called sources/

If the name & hash matches the package definition, it will unarchive it here and compile
the source for you, as required. 

Over 680MB's of source will be downloaded if you select all types of targets to build,
so you may want to limit your downloads to just those needed to build on your system.

GR
=__==__==__==__==__==__==__==__==__==__==__==__==__==__==__==__==__==__==__==__==__=
To build dependencies for the current arch+OS:
    make
To build for another arch/OS:
  make HOST=host-platform-triplet && make HOST=host-platform-triplet
  (For example: make HOST=i686-w64-mingw32 -j4)

A prefix will be generated that's suitable for plugging into Ixcoin's
configure. In the above example, a dir named i686-w64-mingw32 will be
created. To use it for Ixcoin:

./configure --prefix=`pwd`/depends/i686-w64-mingw32

No other options are needed, the paths are automatically configured.

Dependency Options:
The following can be set when running make: make FOO=bar

SOURCES_PATH: downloaded sources will be placed here
BASE_CACHE: built packages will be placed here
SDK_PATH: Path where sdk's can be found (used by OSX)
FALLBACK_DOWNLOAD_PATH: If a source file can't be fetched, try here before giving up
NO_QT: Don't download/build/cache qt and its dependencies
NO_WALLET: Don't download/build/cache libs needed to enable the wallet
NO_UPNP: Don't download/build/cache packages needed for enabling upnp
DEBUG: disable some optimizations and enable more runtime checking
USE_LINUX_STATIC_QT5: Build a static qt5 rather than shared qt4. Linux only.

If some packages are not built, for example 'make NO_WALLET=1', the appropriate
options will be passed to ixcoin's configure. In this case, --disable-wallet.

Additional targets:
download: run 'make download' to fetch all sources without building them
download-osx: run 'make download-osx' to fetch all sources needed for osx builds
download-win: run 'make download-win' to fetch all sources needed for win builds
download-linux: run 'make download-linux' to fetch all sources needed for linux builds
